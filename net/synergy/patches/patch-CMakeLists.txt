$NetBSD: patch-CMakeLists.txt,v 1.2 2019/07/18 16:04:43 nia Exp $

Don't use hardcoded paths for finding libcrypto and libssl.

--- CMakeLists.txt.orig	2019-05-09 16:52:59.000000000 +0000
+++ CMakeLists.txt
@@ -279,32 +279,7 @@ endif()
 #
 # OpenSSL
 #
-if (${CMAKE_SYSTEM_NAME} MATCHES "Windows")
-    set (OPENSSL_ROOT ${CMAKE_CURRENT_SOURCE_DIR}/ext/openssl/windows)
-    if (CMAKE_SIZEOF_VOID_P EQUAL 8)
-        set (OPENSSL_ROOT "${OPENSSL_ROOT}/x64")
-    else()
-        set (OPENSSL_ROOT "${OPENSSL_ROOT}/x86")
-    endif()
-
-    include_directories (BEFORE SYSTEM ${OPENSSL_ROOT}/include)
-    set (OPENSSL_LIBS
-        ${OPENSSL_ROOT}/lib/libeay32.lib
-        ${OPENSSL_ROOT}/lib/ssleay32.lib
-    )
-elseif (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
-    set (OPENSSL_ROOT /usr/local/opt/openssl)
-
-    include_directories (BEFORE SYSTEM ${OPENSSL_ROOT}/include)
-    set (OPENSSL_LIBS
-        ${OPENSSL_ROOT}/lib/libssl.a
-        ${OPENSSL_ROOT}/lib/libcrypto.a
-    )
-elseif (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
-    set (OPENSSL_LIBS ssl crypto)
-else()
-    message (FATAL_ERROR "Couldn't find OpenSSL")
-endif()
+set (OPENSSL_LIBS ssl crypto)
 
 #
 # Configure_file... but for directories, recursively.
