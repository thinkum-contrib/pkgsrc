$NetBSD: patch-configure.ac,v 1.12 2018/11/10 21:35:07 mrg Exp $

add arm64 support.

fix __cxa_exception check.

fix wrong default paths.


--- configure.ac.orig	2018-09-20 09:44:38.000000000 +0000
+++ configure.ac	2018-11-10 09:32:15.242164059 +0000
@@ -4286,6 +4286,11 @@
     P_SEP=:
 
     case "$host_cpu" in
+    aarch64)
+        CPUNAME=AARCH64
+        RTL_ARCH=AARCH64
+        PLATFORMID=netbsd_aarch64
+        ;;
     i*86)
         CPUNAME=INTEL
         RTL_ARCH=x86
@@ -6013,14 +6018,14 @@
         ], [AC_MSG_RESULT([no])])
     AC_LANG_POP([C++])
 
-    AC_MSG_CHECKING([whether $CXX defines __cxa_exceptions in cxxabi.h])
+    AC_MSG_CHECKING([whether $CXX defines __cxa_exception in cxxabi.h])
     AC_LANG_PUSH([C++])
     AC_COMPILE_IFELSE([AC_LANG_SOURCE([
             #include <cstddef>
             #include <cxxabi.h>
-            std::size_t f() { return sizeof(__cxxabiv1::__cxa_exceptions); }
+            std::size_t f() { return sizeof(__cxxabiv1::__cxa_exception); }
         ])], [
-            AC_DEFINE([HAVE_CXXABI_H_CXA_EXCEPTIONS],[1])
+            AC_DEFINE([HAVE_CXXABI_H_CXA_EXCEPTION],[1])
             AC_MSG_RESULT([yes])
         ], [AC_MSG_RESULT([no])])
     AC_LANG_POP([C++])
@@ -7612,7 +7617,7 @@
     if test "$COM" = "MSC"; then
         LIBJPEG_LIBS="${WORKDIR}/UnpackedTarball/libjpeg-turbo/.libs/libjpeg.lib"
     else
-        LIBJPEG_LIBS="-L${WORKDIR}/UnpackedTarball/libjpeg-turbo/.libs -ljpeg"
+        LIBJPEG_LIBS="${WORKDIR}/UnpackedTarball/libjpeg-turbo/.libs/libjpeg.a"
     fi
 
     case "$host_cpu" in
@@ -9208,11 +9213,11 @@
 dnl ===================================================================
 libo_CHECK_SYSTEM_MODULE([graphite],[GRAPHITE],[graphite2 >= 0.9.3],
                          ["-I${WORKDIR}/UnpackedTarball/graphite/include -DGRAPHITE2_STATIC"],
-                         ["-L${WORKDIR}/LinkTarget/StaticLibrary -lgraphite"])
+                         ["${WORKDIR}/LinkTarget/StaticLibrary/libgraphite.a"])
 
 libo_CHECK_SYSTEM_MODULE([harfbuzz],[HARFBUZZ],[harfbuzz-icu >= 0.9.42],
                          ["-I${WORKDIR}/UnpackedTarball/harfbuzz/src"],
-                         ["-L${WORKDIR}/UnpackedTarball/harfbuzz/src/.libs -lharfbuzz"])
+                         ["${WORKDIR}/UnpackedTarball/harfbuzz/src/.libs/libharfbuzz.a"])
 
 if test "$COM" = "MSC"; then # override the above
     GRAPHITE_LIBS="${WORKDIR}/LinkTarget/StaticLibrary/graphite.lib"
@@ -10410,7 +10415,7 @@
 elif test "$enable_mpl_subset" = "yes"; then
     AC_MSG_CHECKING([whether gpgmepp should be disabled due to building just MPL])
     AC_MSG_RESULT([yes])
-elif test "$_os" = "Linux" -o "$_os" = "Darwin" -o "$_os" = "WINNT" ; then
+elif test "$_os" = "Linux" -o "$_os" = "Darwin" -o "$_os" = "WINNT" -o "$_os" = "NetBSD" ; then
     dnl ===================================================================
     dnl Check for system gpgme
     dnl ===================================================================
@@ -10420,7 +10425,7 @@
         SYSTEM_GPGMEPP=TRUE
 
         # C++ library doesn't come with fancy gpgmepp-config, check for headers the old-fashioned way
-        AC_CHECK_HEADER(gpgme++/gpgmepp_version.h, [ GPGMEPP_CFLAGS=-I/usr/include/gpgme++ ],
+        AC_CHECK_HEADER(gpgme++/gpgmepp_version.h, [ GPGMEPP_CFLAGS=-I/usr/pkg/include/gpgme++ ],
             [AC_MSG_ERROR([gpgmepp headers not found, install gpgmepp development package])], [])
         # progress_callback is the only func with plain C linkage
         # checking for it also filters out older, KDE-dependent libgpgmepp versions
@@ -11753,8 +11758,8 @@
     dnl Checking for ant.jar
     if test "$ANT_HOME" != "NO_ANT_HOME"; then
         AC_MSG_CHECKING([Ant lib directory])
-        if test -f $ANT_HOME/lib/ant.jar; then
-            ANT_LIB="$ANT_HOME/lib"
+        if test -f $ANT_HOME/lib/java/ant/ant.jar; then
+            ANT_LIB="$ANT_HOME/lib/java/ant"
         else
             if test -f $ANT_HOME/ant.jar; then
                 ANT_LIB="$ANT_HOME"
